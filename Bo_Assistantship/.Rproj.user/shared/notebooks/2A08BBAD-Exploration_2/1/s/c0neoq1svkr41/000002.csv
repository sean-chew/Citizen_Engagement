"0","census_api_key(""4878f9292ac0c11cddc6fabc8cd8530c4d0e12f0"")"
"2","To install your API key for use in future sessions, run this function with `install = TRUE`.
"
"0","v2019 <- load_variables(2019, ""acs5"", cache = TRUE)"
"0",""
"0","demographics <- v2019 %>% "
"0","  filter(grepl(""B02001"",name))"
"0",""
"0","demographics <- c(white = ""B02001_002"","
"0","                  total = ""B02001_001"","
"0","                  income =""B19113_001"","
"0","                  language_bad = ""B16004_045"","
"0","                  language_not_well = ""B16004_044"","
"0","                  native_born = ""B05002_002"")"
"0","Census_2019 <- "
"0","  get_acs("
"0","    state = 36, "
"0","    county = c(""061"", ""047"", ""081"", ""005"", ""085""), "
"0","    geography = ""tract"", "
"0","    variables = demographics,"
"0","    year = 2019"
"0","  ) %>% "
"0","  transmute("
"0","    cnty = str_sub(GEOID, 3, 5),"
"0","    tract = as.integer(str_sub(GEOID, 6, 12)), "
"0","    measure = estimate, "
"0","    boro_name = "
"0","      case_when("
"0","        cnty == ""061"" ~ ""Manhattan"", "
"0","        cnty == ""047"" ~ ""Brooklyn"", "
"0","        cnty == ""081"" ~ ""Queens"", "
"0","        cnty == ""005"" ~ ""Bronx"", "
"0","        cnty == ""085"" ~ ""Staten Island"""
"0","      ), "
"0","    ctlabel = as.character(tract / 100),"
"0","    variable = variable)"
"2","Getting data from the 2015-2019 5-year ACS
"
"0","Population_2019 <- Census_2019 %>% "
"0","  filter(variable == 'total')"
"0",""
"0","census_shapes <- ct %>% "
"0","    left_join(Population_2019, by = c(""boro_name"", ""ctlabel""))"
"0",""
